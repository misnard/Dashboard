version: 2

jobs:
  build:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
        environment:
          FLASK_CONFIG: testing
          TEST_DATABASE_URL: postgresql://ubuntu@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    working_directory: ~/dist
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - persist_to_workspace:
          root: ~/
          paths: dist
  deploy:
    machine:
      enabled: true
    working_directory: ~/dist
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Deploy Over SSH
          command: |
            sudo apt install rsync
            deploy_folder_name=$(date '+%Y%m%d%H%M%S')
            deploy_folder_path=deployment/${CIRCLE_BRANCH}/releases/${deploy_folder_name}
            deploy_home_path=/home/dashbrd
            echo "Debug help: ${deploy_folder_path}"
            ssh ${SSH_USER}@${SSH_HOST} "mkdir -p ${deploy_folder_path}"
            rsync -avzz --exclude "venv" ~/dist ${SSH_USER}@${SSH_HOST}:${deploy_folder_path}
            ssh ${SSH_USER}@${SSH_HOST} "rm ${deploy_home_path}/deployment/${CIRCLE_BRANCH}/current"
            ssh ${SSH_USER}@${SSH_HOST} "ln -s ${deploy_home_path}/${deploy_folder_path} ${deploy_home_path}/deployment/${CIRCLE_BRANCH}/current"
            ssh ${SSH_USER}@${SSH_HOST} "ln -s ${deploy_home_path}/deployment/${CIRCLE_BRANCH}/shared/.env ${deploy_home_path}/deployment/${CIRCLE_BRANCH}/current/dist/.env"
            ssh ${SSH_USER}@${SSH_HOST} "cd ${deploy_folder_path}/dist && pip3 install -r requirements.txt"
            ssh ${SSH_USER}@${SSH_HOST} "sudo /bin/systemctl restart stackbrd"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build # only deploy once build job has completed
          filters:
            branches:
              only: master
